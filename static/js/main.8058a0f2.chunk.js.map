{"version":3,"sources":["components/auth/Login.js","components/auth/NuevaCuenta.js","context/proyectos/ProyectoContext.js","components/proyectos/NuevoProyecto.js","components/proyectos/Proyecto.js","components/proyectos/Listado.js","components/layout/Sidebar.js","components/layout/Barra.js","components/tareas/FormTareas.js","components/tareas/Tarea.js","components/tareas/ListadoTareas.js","components/proyectos/Proyectos.js","context/proyectos/ProyectoReducer.js","types/index.js","context/proyectos/ProyectoState.js","App.js","serviceWorker.js","index.js"],"names":["Login","useState","email","password","user","setUser","onChange","e","target","name","value","className","onSubmit","preventDefault","htmlFor","type","id","placeholder","to","NuevaCuenta","confirm","proyectoContext","createContext","NuevoProyecto","proyectosContext","useContext","ProyectoContext","formulario","errorFormulario","mostrarFormulario","agregarProyecto","mostrarError","nombre","proyecto","setProyecto","onClick","Proyecto","proyectoActual","Listado","proyectos","obtenerProyectos","useEffect","length","map","key","Sidebar","Barra","href","FormTareas","Tarea","tarea","estado","ListadoTareas","tareasProyecto","Proyectos","state","action","payload","filter","ProyectoState","props","useReducer","proyectoReducer","dispatch","Provider","uuid","proyectoId","eliminarProyecto","children","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8058a0f2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst Login = () => {\n\n\n    const [user, setUser] = useState({\n        email: \"\",\n        password: \"\"\n    })\n\n    const onChange = (e) => {\n        setUser({\n            ...user,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const onSubmit = e => {\n        e.preventDefault();\n    }\n\n    return (\n        <div className=\"form-usuario\">\n            <div className=\"contenedor-form sombra-dark\">\n                <h1>Iniciar Sesión</h1>\n\n                <form\n                    onSubmit={onSubmit}\n                >\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"Tu Email\"\n                            value={user.email}\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"Tu contraseña\"\n                            value={user.password}\n                            onChange={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <input\n                            type=\"submit\"\n                            className=\"btn btn-primario btn-block\"\n                            value=\"Iniciar Sesión\"\n                        />\n                    </div>\n                </form>\n                <Link to={\"/MERNTask/proyectos\"} className=\"enlace-cuenta\" >\n                    Obtener Cuenta\n                </Link>\n            </div>\n        </div>\n    );\n}\n\nexport default Login;","import React, { useState } from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst NuevaCuenta = () => {\n\n\n    const [user, setUser] = useState({\n        name:\"\",\n        email: \"\",\n        password: \"\",\n        confirm:\"\"\n    })\n\n    const onChange = (e) => {\n        setUser({\n            ...user,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n\n\n    }\n\n    return (\n        <div className=\"form-usuario\">\n            <div className=\"contenedor-form sombra-dark\">\n                <h1>Obtener una cuenta</h1>\n\n                <form\n                    onSubmit={onSubmit}\n                >\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"name\">Nombre</label>\n                        <input\n                            type=\"text\"\n                            id=\"name\"\n                            name=\"name\"\n                            placeholder=\"Tu Nombre\"\n                            value={user.name}\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"Tu Email\"\n                            value={user.email}\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"Tu contraseña\"\n                            value={user.password}\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"confirm\">Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"confirm\"\n                            name=\"confirm\"\n                            placeholder=\"Confirma tu contraseña\"\n                            value={user.confirm}\n                            onChange={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <input\n                            type=\"submit\"\n                            className=\"btn btn-primario btn-block\"\n                            value=\"Iniciar Sesión\"\n                        />\n                    </div>\n                </form>\n                <Link to={\"/MERNTask/\"} className=\"enlace-cuenta\" >\n                    Volver a Iniciar sesión\n                </Link>\n            </div>\n        </div>\n    );\n}\n\nexport default NuevaCuenta;","import { createContext } from 'react';\n\nconst proyectoContext = createContext();\n\nexport default proyectoContext;","import React, { useState, useContext } from 'react';\nimport ProyectoContext from \"../../context/proyectos/ProyectoContext\";\n\n\nconst NuevoProyecto = () => {\n\n    const proyectosContext = useContext(ProyectoContext);\n    const {\n        formulario,\n        errorFormulario,\n        mostrarFormulario,\n        agregarProyecto,\n        mostrarError\n    } = proyectosContext;\n\n    const [proyecto, setProyecto] = useState({\n        nombre: \"\"\n    });\n\n    const onChangeProyecto = e => {\n        setProyecto({\n            ...proyecto,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const onSubmitProyecto = e => {\n        e.preventDefault();\n        if (proyecto.nombre === \"\") {\n            mostrarError();\n            return;\n        }\n\n        agregarProyecto(proyecto);\n        \n        setProyecto({\n            nombre: \"\"\n        })\n    }\n\n    return (\n        <>\n            <button\n                type=\"button\"\n                className=\"btn btn-block btn-primario\"\n                onClick={() => mostrarFormulario()}\n            >Nuevo Proyecto</button>\n\n            {formulario ?\n                (\n                    <form\n                        className=\"formulario-nuevo-proyecto\"\n                        onSubmit={onSubmitProyecto}\n                    >\n                        <input\n                            type=\"text\"\n                            className=\"input-text\"\n                            placeholder=\"Nombre Proyecto\"\n                            name=\"nombre\"\n                            value={proyecto.nombre}\n                            onChange={onChangeProyecto}\n                        />\n                        <input\n                            type=\"submit\"\n                            className=\"btn btn-block btn-primario\"\n                            value=\"Agregar Proyecto \"\n                        />\n                    </form>\n                ) : null}\n            {errorFormulario\n                ? <p className=\"mensaje error\"> El nombre del Proyecto es obligatorio</p>\n                : null\n            }\n        </>\n    );\n}\n\nexport default NuevoProyecto;","import React, { useContext } from 'react';\nimport ProyectoContext from \"../../context/proyectos/ProyectoContext\";\n\n\nconst Proyecto = ({ proyecto }) => {\n\n    const proyectosContext = useContext(ProyectoContext);\n    const { proyectoActual } = proyectosContext;\n\n    return (\n        <li>\n            <button\n                type=\"button\"\n                className=\"btn btn-blank\"\n                onClick={() => proyectoActual(proyecto.id)}\n            >{proyecto.nombre}</button>\n        </li>\n    );\n}\n\nexport default Proyecto;","import React, { useEffect, useContext } from 'react';\nimport Proyecto from \"./Proyecto\";\nimport ProyectoContext from \"../../context/proyectos/ProyectoContext\";\n\nconst Listado = () => {\n\n    const proyectoContext = useContext(ProyectoContext);\n    const { proyectos, obtenerProyectos } = proyectoContext;\n\n\n    useEffect(() => {\n        obtenerProyectos();\n    }, [])\n    \n    if (proyectos.length === 0) return null;\n\n\n    return (\n        <ul className=\"listado-proyectos\">\n            {proyectos.map(proyecto => (\n                <Proyecto\n                    key={proyecto.id}\n                    proyecto={proyecto}\n                />\n            ))}\n        </ul>\n    );\n}\n\nexport default Listado;","import React from 'react';\nimport NuevoProyecto from \"../proyectos/NuevoProyecto\";\nimport Listado from \"../proyectos/Listado\";\n\nconst Sidebar = () => {\n    return (\n        <aside>\n            <h1>MERN<span>Tasks</span></h1>\n            <NuevoProyecto />\n            <div className=\"proyectos\">\n                <h2>Tus Proyectos</h2>\n                <Listado/>\n            </div>\n        </aside>\n    );\n}\n\nexport default Sidebar;","import React from 'react';\n\nconst Barra = () => {\n    return (\n        <header className=\"app-header\">\n            <p className=\"nombre-usuario\">Hola <span>Andres J.</span></p>\n\n            <nav className=\"nav-principal\">\n                <a href=\"#!\">Cerrar Sesión</a>\n            </nav>\n        </header>\n    );\n}\n\nexport default Barra;","import React, { useContext } from 'react';\nimport ProyectoContext from \"../../context/proyectos/ProyectoContext\";\n\n\nconst FormTareas = () => {\n\n    const proyectosContext = useContext(ProyectoContext);\n    const { proyecto } = proyectosContext;\n\n    if (!proyecto) return null;\n    \n    const [proyectoActual] = proyecto;\n\n    return (\n        <div className=\"formulario\">\n            <form>\n                <div className=\"contenedor-input\">\n                    <input\n                        type=\"text\"\n                        className=\"input-text\"\n                        placeholder=\"Nombre Tarea...\"\n                        name=\"nombre\"\n                    />\n                </div>\n                <div className=\"contenedor-input\">\n                    <input\n                        type=\"submit\"\n                        className=\"btn btn-block btn-submit btn-primario\"\n                        value=\"Agregar Tarea\"\n                    />\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default FormTareas;","import React from 'react';\n\n\nconst Tarea = ({ tarea }) => {\n\n\n    \n    return (\n        <li className=\"tarea sombra\">\n            <p>{tarea.nombre}</p>\n            <div className=\"estado\">\n                {tarea.estado\n                    ?\n                    (\n                        <button\n                            type=\"button\"\n                            className=\"completo\"\n                        >Completo</button>\n                    )\n                    :\n                    (\n                        <button\n                            type=\"button\"\n                            className=\"incompleto\"\n                        >Incompleto</button>\n                    )\n                }\n            </div>\n            <div className=\"acciones\">\n                <button\n                    type=\"button\"\n                    className=\"btn btn-primario\"\n                >Editar</button>\n                <button\n                    type=\"button\"\n                    className=\"btn btn-secundario\"\n                >Eliminar</button>\n            </div>\n        </li>\n    );\n}\n\nexport default Tarea;","import React, { useContext } from 'react';\nimport Tarea from \"./Tarea\";\nimport ProyectoContext from \"../../context/proyectos/ProyectoContext\";\n\nconst ListadoTareas = () => {\n\n    const tareasProyecto = [\n        { nombre: 'Elegir Plataforma', estado: true },\n        { nombre: 'Elegir Colores', estado: false },\n        { nombre: 'Elegir Plataformas de Pago', estado: false },\n        { nombre: 'Elegir Hosting', estado: true },\n    ];\n\n    const proyectosContext = useContext(ProyectoContext);\n    const { proyecto } = proyectosContext;\n\n    if (!proyecto) return <h2>Selecciona un Proyecto</h2>\n\n    const [proyectoActual] = proyecto;\n\n    return (\n        <>\n            <h2>Proyecto: {proyectoActual.nombre}</h2>\n\n            <ul className=\"listado-tareas\">\n                {tareasProyecto.length === 0\n                    ? (<li className=\"tarea\"><p>No hay tareas</p></li>)\n                    : tareasProyecto.map(tarea => (\n                        <Tarea\n                            tarea={tarea}\n                        />\n                    ))\n                }\n            </ul>\n            <button\n                type=\"button\"\n                className=\"btn btn-eliminar\"\n            >Eliminar Proyecto &times;</button>\n        </>\n    );\n}\n\nexport default ListadoTareas;","import React from 'react';\nimport Sidebar from \"../layout/Sidebar\";\nimport Barra from \"../layout/Barra\";\nimport FormTareas from \"../tareas/FormTareas\";\nimport ListadoTareas from \"../tareas/ListadoTareas\";\n\nconst Proyectos = () => {\n    return (\n        <div className=\"contenedor-app\">\n            <Sidebar />\n            <div className=\"seccion-principal\">\n                <Barra />\n                <main>\n                    <FormTareas />\n                    <div className=\"contenedor-tareas\">\n                        <ListadoTareas />\n                    </div>\n                </main>\n            </div>\n        </div>\n    );\n}\n\nexport default Proyectos;","import {\n    FORMULARIO_PROYECTO,\n    OBTENER_PROYECTOS,\n    AGREGAR_PROYECTO,\n    VALIDAR_FORMULARIO,\n    PROYECTO_ACTUAL,\n    ELIMINAR_PROYECTO\n} from \"../../types\";\n\nexport default (state, action) => {\n\n    switch (action.type) {\n        case FORMULARIO_PROYECTO:\n            return {\n                ...state,\n                formulario: true\n            }\n        case OBTENER_PROYECTOS:\n            return {\n                ...state,\n                proyectos: action.payload\n            }\n        case AGREGAR_PROYECTO:\n            return {\n                ...state,\n                proyectos: [...state.proyectos, action.payload],\n                formulario: false,\n                errorFormulario: false\n            }\n        case VALIDAR_FORMULARIO:\n            return {\n                ...state,\n                errorFormulario: true\n            }\n\n        case PROYECTO_ACTUAL:\n            return {\n                ...state,\n                proyecto: state.proyectos.filter(proyecto => proyecto.id === action.payload)\n            }\n\n        case ELIMINAR_PROYECTO:\n            return {\n                ...state,\n                proyecto: state.proyectos.filter(proyecto => proyecto.id === action.payload)\n            }\n        default:\n            return state;\n    }\n}","export const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO';\nexport const OBTENER_PROYECTOS = 'OBTENER_PROYECTOS';\nexport const AGREGAR_PROYECTO = 'AGREGAR_PROYECTO';\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\nexport const PROYECTO_ACTUAL = 'PROYECTO_ACTUAL';\nexport const ELIMINAR_PROYECTO = 'ELIMINAR_PROYECTO';\n","import React, { useReducer } from 'react';\nimport uuid from \"react-uuid\";\nimport proyectoContext from \"./ProyectoContext\";\nimport proyectoReducer from \"./ProyectoReducer\";\nimport {\n    FORMULARIO_PROYECTO,\n    OBTENER_PROYECTOS,\n    AGREGAR_PROYECTO,\n    VALIDAR_FORMULARIO,\n    PROYECTO_ACTUAL,\n    ELIMINAR_PROYECTO\n} from \"../../types\";\n\n\nconst ProyectoState = props => {\n    const proyectos = [\n        { id: 1, nombre: 'Tienda Virtual' },\n        { id: 2, nombre: 'Intranet' },\n        { id: 3, nombre: 'Diseño de Sitio Web' },\n        { id: 4, nombre: 'MERN' }\n    ]\n    const initialState = {\n        proyectos: [],\n        formulario: false,\n        errorFormulario: false,\n        proyecto: null\n    }\n\n    const [state, dispatch] = useReducer(proyectoReducer, initialState)\n\n    const mostrarFormulario = () => {\n        dispatch({\n            type: FORMULARIO_PROYECTO\n        })\n    }\n\n    const obtenerProyectos = () => {\n        dispatch({\n            type: OBTENER_PROYECTOS,\n            payload: proyectos\n        })\n    }\n\n    const agregarProyecto = proyecto => {\n        proyecto.id = uuid()\n        dispatch({\n            type: AGREGAR_PROYECTO,\n            payload: proyecto\n        })\n    }\n\n    const mostrarError = () => {\n        dispatch({\n            type: VALIDAR_FORMULARIO\n        })\n    }\n\n    const proyectoActual = proyectoId => {\n        dispatch({\n            type: PROYECTO_ACTUAL,\n            payload: proyectoId\n        })\n    }\n\n    const eliminarProyecto = proyectoId => {\n        dispatch({\n            type: ELIMINAR_PROYECTO,\n            payload: proyectoId\n        })\n    }\n    \n    return (\n        <proyectoContext.Provider\n            value={{\n                proyectos: state.proyectos,\n                formulario: state.formulario,\n                errorFormulario: state.errorFormulario,\n                proyecto: state.proyecto,\n                mostrarFormulario,\n                obtenerProyectos,\n                agregarProyecto,\n                mostrarError,\n                proyectoActual,\n                eliminarProyecto\n            }}\n        >\n            {props.children}\n        </proyectoContext.Provider>\n    )\n}\nexport default ProyectoState;","import React from 'react';\nimport Login from \"./components/auth/Login\";\nimport NuevaCuenta from \"./components/auth/NuevaCuenta\";\nimport Proyectos from \"./components/proyectos/Proyectos\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport ProyectoState from \"./context/proyectos/ProyectoState\";\n\nfunction App() {\n  return (\n    <ProyectoState>\n      <Router>\n        <Switch>\n          <Route exact path=\"/MERNTask\" component={Login} />\n          <Route exact path=\"/MERNTask/nueva-cuenta\" component={NuevaCuenta} />\n          <Route exact path=\"/MERNTask/proyectos\" component={Proyectos} />\n        </Switch>\n      </Router>\n    </ProyectoState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}